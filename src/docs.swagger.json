{
  "swagger": "2.0",
  "info": {
    "title": "role/v1/role.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "RoleService"
    },
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/roles": {
      "get": {
        "summary": "Query is used to search for roles.",
        "operationId": "RoleService_Query",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rolev1QueryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/v1/roles/{roleId}": {
      "get": {
        "summary": "Get retrieves the role specified.",
        "operationId": "RoleService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rolev1GetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RoleService"
        ]
      }
    },
    "/v1/users": {
      "get": {
        "summary": "Query is used to search for users.",
        "operationId": "UserService_Query",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userv1QueryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "post": {
        "summary": "Create a user.",
        "operationId": "UserService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "CreateRequest contains information needed to create a new auth.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/users/{user.id}": {
      "put": {
        "summary": "Update a auth.",
        "operationId": "UserService_Update2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "roleId": {
                      "type": "string"
                    }
                  },
                  "description": "User represents a platform user."
                },
                "updateMask": {
                  "type": "string"
                }
              },
              "description": "UpdateRequest is used to specify a auth to update."
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "patch": {
        "summary": "Update a auth.",
        "operationId": "UserService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "roleId": {
                  "type": "string"
                }
              },
              "description": "User represents a platform user."
            }
          },
          {
            "name": "updateMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/users/{userId}": {
      "get": {
        "summary": "Get retrieves the auth specified.",
        "operationId": "UserService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userv1GetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "summary": "Delete the specified auth.",
        "operationId": "UserService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "PermissionAction": {
      "type": "string",
      "enum": [
        "ACTION_UNSPECIFIED",
        "ACTION_READ",
        "ACTION_WRITE"
      ],
      "default": "ACTION_UNSPECIFIED",
      "description": "Action is the available actions that can be performed on a resource."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rolev1GetResponse": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/v1Role"
        }
      },
      "description": "GetResponse returns a user based on the user id\nprovided in the GetRequest."
    },
    "rolev1QueryResponse": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Role"
          }
        },
        "matches": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "QueryResponse returns a paged list of roles matching\nQueryRequest criteria. Matches provides the total number of records\nmatching the query regardless of limit."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "userv1GetResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      },
      "description": "GetResponse returns a user based on the user id\nprovided in the GetRequest."
    },
    "userv1QueryResponse": {
      "type": "object",
      "properties": {
        "cursor": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1User"
          }
        },
        "matches": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "QueryResponse returns a paged list of users matching\nQueryRequest criteria. Matches provides the total number of records\nmatching the query regardless of limit."
    },
    "v1CreateRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      },
      "description": "CreateRequest contains information needed to create a new auth."
    },
    "v1CreateResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      },
      "description": "CreateResponse returns the newly created auth."
    },
    "v1DeleteResponse": {
      "type": "object",
      "description": "DeleteResponse returns an empty response and can be ignored."
    },
    "v1Permission": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "string"
        },
        "action": {
          "$ref": "#/definitions/PermissionAction"
        }
      },
      "description": "Permission represents a permission for a resource."
    },
    "v1Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Permission"
          }
        }
      },
      "description": "Role represents a system role."
    },
    "v1UpdateResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      },
      "description": "UpdateResponse returns an updated user based on the one provided\nin the UpdateRequest."
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "roleId": {
          "type": "string"
        }
      },
      "description": "User represents a platform user."
    }
  }
}
